.TH CHOWN 2
.SH NAME
chown \- change owner and group of a file
.SH SYNOPSIS
.BR "int chown (" "path, owner, group" )
.br
.BR "char \(**" path ;
.br
.BR int " owner, group" ;
.SH DESCRIPTION
.I Path\^
points to a
pathname
naming a file.
The owner
.SM ID
and group
.SM ID
of the named file
are set to the numeric values contained in
.I owner\^
and
.I group\^
respectively.
.PP
Only processes with the effective user
.SM ID
equal to the file owner or
superuser may change the ownership of a file.
.PP
If
.I chown\^
is invoked by other than the superuser, the set-user-\s-1ID\s0
and set-group-\s-1ID\s0
bits of the file mode
are cleared (bits 04000 and 02000, respectively).
See \fIchmod\fP(2) for a complete list of access permission bits.
.PP
.I Chown\^
fails and the owner and group of the named file 
remain unchanged if one or more of the following are true:
.IP
A component of the
path prefix
is not a directory.
.SM
\%[ENOTDIR]
.IP
The named file does not exist.
.SM
\%[ENOENT]
.IP
Search permission is denied on a
component of the
path prefix.
.SM
\%[EACCES]
.IP
The effective user
.SM ID
does not match the owner of the file
and the effective user
.SM ID
is not superuser.
.SM
\%[EPERM]
.IP
The named file resides on a read-only file system.
.SM
\%[EROFS]
.IP
.I Path\^
points outside the process's allocated address space.
.SM
\%[EFAULT]
.SH "RETURN VALUE"
Upon successful completion, a value of 0 is returned.
Otherwise, a value of \-1 is returned and
.I errno\^
is set to indicate the error.
.SH "SEE ALSO"
chmod(2).
.\"	@(#)chown.2	1.5	
