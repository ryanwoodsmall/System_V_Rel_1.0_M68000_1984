.TH FSEEK 3S
.SH NAME
fseek, rewind, ftell \- reposition a file pointer in a stream
.SH SYNOPSIS
.B #include <stdio.h>
.PP
.BR "int fseek (" "stream, offset, ptrname" )
.br
.SM
.BR "FILE\*S \(**" stream ;
.br
.BR long " offset" ;
.br
.BR int " ptrname" ;
.PP
.BR "void rewind (" stream )
.br
.SM
.BR "FILE\*S \(**" stream ;
.PP
.BR "long ftell (" stream )
.br
.SM
.BR "FILE\*S \(**" stream ;
.SH DESCRIPTION
.I Fseek\^
sets the position of the next input or output
operation on the
.IR stream .
The new position is at the signed distance
.I offset\^
bytes
from the beginning, the current position, or the end of the file,
when the value of
.I ptrname\^
is 0, 1, or 2, respectively.
.PP
.IR Rewind ( stream )
is equivalent to
.IR fseek ( stream ", 0L, 0),"
except that no value is returned.
.PP
.I Fseek\^
and
.I rewind\^
undo any effects of
.IR ungetc (3S).
.PP
After
.I fseek\^
or
.IR rewind ,
the next operation on a file opened for update
may be either input or output.
.PP
.I Ftell\^
returns the offset of the current byte relative to the beginning
of the file associated with the named
.IR stream .
.SH SEE ALSO
lseek(2),
fopen(3S).
.SH DIAGNOSTICS
.I Fseek\^
returns non-zero for improper seeks;
otherwise it returns zero.
An improper seek can be, for example, an
.I fseek\^
done on a file that has not been opened via
.IR fopen ;
in particular,
.I fseek\^
may not be used on a terminal or on a file opened via
.IR popen (3S).
.SH WARNING
On \*(5) an offset returned by
.I ftell\^
is measured in bytes, and it is permissible to seek to positions
relative to that offset; however,
portability to systems other than \*(5) requires that
an offset be used by
.I fseek\^
directly. Arithmetic may not meaningfully be performed on such
an offset, which is not necessarily measured in bytes.
.\"	@(#)fseek.3s	1.5	
