.TH INTRO 3
.SH NAME
intro \- introduction to subroutines and libraries
.SH SYNOPSIS
.B #include <stdio.h>
.PP
.B #include <math.h>
.SH DESCRIPTION
This section describes functions found
in various libraries, other than those functions
that directly invoke
system primitives,
which are described in Section\ 2 of this volume.
Certain major collections are identified by a
letter after the section number:
.PP
.PD 0
.TP 6n
(3C)
These functions, together with those of Section\ 2 and those
marked (3S), constitute the Standard C Library,
.IR libc ,
which is automatically loaded by the C compiler,
.IR cc (1).
The link editor
.IR ld (1)
searches this library under the
.B \-lc
option.
Some functions require declarations that can be included
in the program being compiled by adding the line
.sp
.BI "#include" " <header filename>"
.sp
The appropriate #include file is indicated in the SYNOPSIS
part of a function description.
.TP
(3F)
These functions constitute the
.SM FORTRAN
intrinsic function library,
.IR libF77 .
These functions are automatically available to the
.SM FORTRAN
programmer and require no special invocation of the compiler.
.TP
(3M)
These functions constitute the Math Library,
.IR libm .
They are automatically loaded as needed by the
.SM FORTRAN
compiler
.IR f\^77 (1).
They are not automatically loaded by the C compiler,
.IR cc (1);
however, the link editor searches this library under the
.B \-lm
option.
Declarations for these functions may be obtained from
the
.B #include
file
.BR <math.h> .
.TP
(3S)
These functions constitute the
``standard
.SM I/O
package'';  an introduction to this package is
provided in
.IR stdio (3S).
The functions are in the library
.IR libc ,
already mentioned.
Declarations should be obtained from
the
.B #include
file
.BR <stdio.h> .
.TP
(3X)
Various
specialized libraries.
The files in which these libraries are found are given
on the appropriate pages.
.sp
For descriptions and examples of #include files, refer
to the "Libraries" section of the \*(5) Programming
Guide.
.PD
.SH DEFINITIONS
A
.I character\^
is any bit pattern able to fit into a byte on the machine.
The
.I null character\^
is a character with value 0,
represented in the C language as '\e0'.
A
.I character array\^
is a sequence of characters.
A
.I "null-terminated character array"
is a sequence of
characters, the last of which is the
.IR "null character" .
A
.I string\^
is a designation for a
.IR "null-terminated character array" .
The
.I "null string"\^
is a character array containing only the null character.
A
.SM
.B NULL
pointer is the value that is obtained by casting
.B 0
into a pointer.
The C language guarantees that this value will not match
that of any legitimate pointer, so many functions that
return pointers return it to indicate an error.
.SM
.B NULL
is defined as
.B 0
in
.BR <stdio.h> ;
the user can include his own definition if he is
not using
.BR <stdio.h> .
.PP
Many groups of
.SM FORTRAN
intrinsic functions have
.I generic\^
function names that do not require explicit or
implicit type declaration.
The type of the function is determined by the type of its argument(s).
For example, the generic function
.I max\^
returns an integer value if given integer arguments (\fImax0\fP),
a real value if given real arguments (\fIamax1\fP),
or a double-precision
value if given double-precision arguments (\fIdmax1\fP).
.SH FILES
/lib/libc.a
.br
/usr/lib/libF77.a
.br
/lib/libm.a
.SH SEE ALSO
ar(1),
cc(1),
f77(1),
ld(1),
nm(1),
intro(2),
stdio(3S).
.IR "\*(6) Programming Guide" .
.SH DIAGNOSTICS
Functions in the Math Library (3M) may return
the conventional values
.B 0
or
.SM
.B HUGE
(the largest single-precision floating-point number)
when the function is undefined for the
given arguments or when the value is not representable.
In these cases, the external variable
.I errno\^
(see
.IR intro (2))
is set to the value
.SM EDOM
or
.SM ERANGE\*S.
Because many of the
.SM FORTRAN
intrinsic functions use the routines found in the Math
Library, the same conventions apply.
.\"	@(#)intro.3	1.9	
